apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "service.name" . }}
    helm.sh/chart: {{ include "service.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path | default "/"}}
              port: http
          {{- range $key, $val := .Values.deployment.livenessProbe.config }}
            {{ $key }}: {{ $val }}
          {{- end }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbe.path }}
              port: http
          {{- range $key, $val := .Values.deployment.readinessProbe.config }}
            {{ $key }}: {{ $val }}
          {{- end }}
          {{- end }}
          {{- if .Values.deployment.secretRef.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.deployment.secretRef.name }}
          {{- end }}
          {{- if .Values.deployment.env.enabled }}
          env:
            {{- range $key, $val := .Values.deployment.env.vars }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.deployment.files }}
          volumeMounts:
            {{- range $configFile := (keys .Values.deployment.files) }}
            - name: {{ template "service.name" $ }}
              mountPath: "/etc/nginx/conf.d/{{ $configFile }}"
              subPath: {{ $configFile }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ template "service.name" . }}
          configMap:
            name: {{ template "service.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
